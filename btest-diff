#! /usr/bin/env bash
#
# TEST_MODE={TEST|UPDATE}
# TEST_BASELINE          
# TEST_DIAGNOSTICS
#
# TEST_DIFF_CANONIFIER

if [ "$#" -lt 1 ]; then
   echo "test-diff: wrong number of arguments" >$TEST_DIAGNOSTICS
   exit 1
fi

input=$1
shift 

if [ ! -f $input ]; then
   echo "test-diff: input $input does not exist." >$TEST_DIAGNOSTICS
   exit 1
fi   

tmpfiles=""
function delete_tmps {
     rm -f $tmpfiles
}

trap delete_tmps 0

result=2

rm -f $TEST_DIAGNOSTICS
echo "== File ===============================" >>$TEST_DIAGNOSTICS
cat $input >>$TEST_DIAGNOSTICS

if [ -e $TEST_BASELINE/$input ]; then

   if [ "$TEST_DIFF_CANONIFIER" != "" ]; then
       diff1=/tmp/test-diff.$$.$input.baseline.tmp
       diff2=/tmp/test-diff.$$.$input.tmp
       tmpfiles="$tmpfiles $diff1 $diff2"
        
       eval $TEST_DIFF_CANONIFIER <$TEST_BASELINE/$input >$diff1
       eval $TEST_DIFF_CANONIFIER <$input >$diff2
   else
       diff1=$TEST_BASELINE/$input
       diff2=$input
   fi

   echo "== Diff ===============================" >>$TEST_DIAGNOSTICS
   diff -au $@ $diff1 $diff2 >>$TEST_DIAGNOSTICS
   result=$?
else
   echo "== Error===============================" >>$TEST_DIAGNOSTICS
   echo "test-diff: no baseline found." >>$TEST_DIAGNOSTICS
   result=1
fi

echo "=======================================" >>$TEST_DIAGNOSTICS

if [ "$TEST_MODE" == "TEST" ]; then
   exit $result
fi

if [ "$TEST_MODE" == "UPDATE" ]; then
   cp $input $TEST_BASELINE/$input
   exit 0
fi

echo "test-diff: unknown test mode $TEST_MODE" >$TEST_DIAGNOSTICS
exit 1

   


